version: '2.1'

services:
  redis:
    image: redis:6.2.1
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./mounts/redis_data:/data
    ports:
      - "6379:6379"

  converter:
    image: eugenmayer/kontextwork-converter:production
    restart: unless-stopped
    volumes:
      - ./mounts/jod_converter_conf:/etc/app
    ports:
      - "8080:8080"

  postgres:
    build:
      context: .
      dockerfile: ./etc/compose/postgres/Dockerfile
    restart: unless-stopped
    volumes:
      - ./mounts/postgres_data:/var/lib/postgresql/data
      - ./mounts/postgres_backups:/backups
    environment:
      POSTGRES_DB: qos
      POSTGRES_USER: qos
      POSTGRES_PASSWORD: qos
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"

  web:
    build:
      context: .
      dockerfile: ./etc/compose/web/Dockerfile
    command: /bin/bash -c "python manage.py collectstatic --noinput && gunicorn -w 2"
    volumes:
      - ./mounts/reports:/webapp/etc/reports
      - ./mounts/logs:/webapp/logs
      - ./mounts/media:/webapp/media
      - ./mounts/static:/webapp/static
      - ./mounts/ipython_data:/root/.ipython/profile_default
      # - ./sample.local_settings_web.py:/webapp/src/conf/djconfig_local.py # PROD-ONLY: change to a configured local_settings_web.py
      - ./data:/webapp/data # DEV-ONLY: for i18n from container
      - ./src:/webapp/src
    environment:
      REDIS_HOST: redis
      HOST: http://web:80
      DB_NAME: qos
      DB_USER: qos
      DB_PASSWORD: qos
      DB_HOST: postgres
      JOD_CONVERTER_URL: http://converter:8080
      UWSGI_WORKERS: 4
      UWSGI_THREADS: 1
      DEBUG: 1
      DEV_NGINX_PORT: ${DEV_NGINX_PORT}
    depends_on:
      - postgres
      - redis
      - converter
    ports:
      - "9090:80"

  celery:
    build:
      context: .
      dockerfile: ./etc/compose/web/Dockerfile
    command: celery -A src.celery worker -n main --max-tasks-per-child=100 --max-memory-per-child=25000 --loglevel=INFO --logfile=/webapp/logs/celery_main.log
    volumes:
      - ./mounts/reports:/webapp/etc/reports
      - ./mounts/uwsgi:/uwsgi
      - ./mounts/logs:/webapp/logs
      - ./mounts/media:/webapp/media
      - ./mounts/static:/webapp/static
      - ./mounts/ipython_data:/root/.ipython/profile_default
      - ./local_settings_web.py:/webapp/src/conf/djconfig_local.py
    environment:
      REDIS_HOST: redis
      HOST: http://web:80
      DB_NAME: qos
      DB_USER: qos
      DB_PASSWORD: qos
      DB_HOST: postgres
      JOD_CONVERTER_URL: http://converter:8080
    depends_on:
      - postgres
      - redis

  flower:
    build:
      context: .
      dockerfile: ./etc/compose/web/Dockerfile
    command: celery -A src.celery flower --conf=/webapp/flowerconfig.py --port=5555
    volumes:
      - ./mounts/reports:/webapp/etc/reports
      - ./mounts/uwsgi:/uwsgi
      - ./mounts/logs:/webapp/logs
    environment:
      REDIS_HOST: redis
    ports:
      - "5555:5555"

  nginx:
    build:
      context: .
      dockerfile: ./etc/compose/nginx/Dockerfile
    depends_on:
      - web
    ports:
      - ${DEV_NGINX_PORT}:80
    volumes:
      - ./mounts/uwsgi:/uwsgi
      - ./mounts/logs/nginx:/var/log/nginx
      - ./mounts/media:/webapp/media:ro
      - ./mounts/static:/webapp/static:ro
