# Generated by Django 3.2.9 on 2021-11-15 11:38

from django.db import migrations


def upd_pobeda_import_jobs_and_strategies(apps, schema_editor):
    ImportShopMappingStrategy = apps.get_model('exchange', 'ImportShopMappingStrategy')
    ImportHistDataStrategy = apps.get_model('exchange', 'ImportHistDataStrategy')
    SystemImportStrategy = apps.get_model('exchange', 'SystemImportStrategy')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    ImportJob = apps.get_model('exchange', 'ImportJob')

    old_pobeda_import_shop_mapping_strategy = SystemImportStrategy.objects.filter(
        strategy_type='pobeda_import_shop_mapping',
    ).first()

    import_shop_mapping_strategy_ctype, _created = ContentType.objects.get_or_create(
        app_label='exchange', model='importshopmappingstrategy')
    if old_pobeda_import_shop_mapping_strategy:
        new_pobeda_import_shop_mapping_strategy = ImportShopMappingStrategy.objects.create(
            polymorphic_ctype=import_shop_mapping_strategy_ctype,
            name=old_pobeda_import_shop_mapping_strategy.name,
            system_code='pobeda',
            system_name='pobeda',
            filename='division.xlsx',
            wfm_shop_code_field_name='GUID в 1С',
            external_shop_code_field_name='Код магазина',
        )
        pobeda_import_shop_mapping_job = ImportJob.objects.filter(
            import_strategy=old_pobeda_import_shop_mapping_strategy,
        ).first()
        if pobeda_import_shop_mapping_job:
            pobeda_import_shop_mapping_job.import_strategy = new_pobeda_import_shop_mapping_strategy
            pobeda_import_shop_mapping_job.save()

        old_pobeda_import_shop_mapping_strategy.delete()

    import_hist_data_strategy_ctype, _created = ContentType.objects.get_or_create(
        app_label='exchange', model='importhistdatastrategy')
    old_pobeda_import_purchases = SystemImportStrategy.objects.filter(
        strategy_type='pobeda_import_purchases',
    ).first()
    if old_pobeda_import_purchases:
        new_pobeda_import_purchases = ImportHistDataStrategy.objects.create(
            polymorphic_ctype=import_hist_data_strategy_ctype,
            name=old_pobeda_import_purchases.name,
            system_code='pobeda',
            data_type='purchases',
            filename_fmt='{data_type}_{year:04d}{month:02d}{day:02d}.csv',
            dt_from='-1d',
            dt_to='-1d',
            columns=[
                'Номер магазина id',
                'Номер кассы id',
                'Номер чека',
                'Дата время открытия чека',
                'Дата время закрытия чека',
                'Табель кассира (сотрудника) id',
                'Id SKU',
                'Количество товара: суммарно по 1 SKU либо 1 единицы SKU',
                'Единица измерения',
                'Стоимость SKU: суммарно по 1 SKU либо 1 единицы SKU',
                'Способ оплаты: нал/безнал',
                'Наличие бонусной карты',
            ],
            shop_num_column_name='Номер магазина id',
            dt_or_dttm_column_name='Дата время открытия чека',
            dt_or_dttm_format='%d.%m.%Y %H:%M:%S',
        )
        pobeda_import_purchases_job = ImportJob.objects.filter(
            import_strategy=old_pobeda_import_purchases,
        ).first()
        if pobeda_import_purchases_job:
            pobeda_import_purchases_job.import_strategy = new_pobeda_import_purchases
            pobeda_import_purchases_job.save()

        old_pobeda_import_purchases.delete()

    old_pobeda_import_brak = SystemImportStrategy.objects.filter(
        strategy_type='pobeda_import_brak',
    ).first()
    if old_pobeda_import_brak:
        new_pobeda_import_brak = ImportHistDataStrategy.objects.create(
            polymorphic_ctype=import_hist_data_strategy_ctype,
            name=old_pobeda_import_brak.name,
            system_code='pobeda',
            data_type='brak',
            filename_fmt='{data_type}_{year:04d}{month:02d}{day:02d}.csv',
            dt_from='-1d',
            dt_to='-1d',
            columns=[
                'Какой-то guid',
                'Номер магазина id',
                'Дата',
                'Тип списания',
                'Id SKU',
                'Количество товара',
            ],
            shop_num_column_name='Номер магазина id',
            dt_or_dttm_column_name='Дата',
            dt_or_dttm_format='%d.%m.%Y',
            receipt_code_columns=[
                'Какой-то guid',
                'Id SKU',
            ],
        )
        pobeda_import_brak_job = ImportJob.objects.filter(
            import_strategy=old_pobeda_import_brak,
        ).first()
        if pobeda_import_brak_job:
            pobeda_import_brak_job.import_strategy = new_pobeda_import_brak
            pobeda_import_brak_job.save()

        old_pobeda_import_brak.delete()

    old_pobeda_import_delivery = SystemImportStrategy.objects.filter(
        strategy_type='pobeda_import_delivery',
    ).first()
    if old_pobeda_import_delivery:
        new_pobeda_import_delivery = ImportHistDataStrategy.objects.create(
            polymorphic_ctype=import_hist_data_strategy_ctype,
            name=old_pobeda_import_delivery.name,
            system_code='pobeda',
            data_type='delivery',
            filename_fmt='{data_type}_{year:04d}{month:02d}{day:02d}.csv',
            dt_from='-1d',
            dt_to='-1d',
            columns=[
                'Какой-то guid',
                'Номер магазина id',
                'Дата и время',
                'Тип поставки',
                'Id SKU',
                'Количество товара',
            ],
            shop_num_column_name='Номер магазина id',
            dt_or_dttm_column_name='Дата и время',
            dt_or_dttm_format='%d.%m.%Y %H:%M:%S',
            receipt_code_columns=[
                'Какой-то guid',
                'Id SKU',
            ],
        )
        pobeda_import_delivery_job = ImportJob.objects.filter(
            import_strategy=old_pobeda_import_delivery,
        ).first()
        if pobeda_import_delivery_job:
            pobeda_import_delivery_job.import_strategy = new_pobeda_import_delivery
            pobeda_import_delivery_job.save()

        old_pobeda_import_delivery.delete()


class Migration(migrations.Migration):
    dependencies = [
        ('exchange', '0007_importhistdatastrategy_importshopmappingstrategy'),
    ]

    operations = [
        migrations.RunPython(upd_pobeda_import_jobs_and_strategies, migrations.RunPython.noop)
    ]
