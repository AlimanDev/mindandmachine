# Generated by Django 2.2.16 on 2021-06-09 19:00

from django.db import migrations


def upd_v_mda_users(apps, schema_editor):
    schema_editor.execute("""
        create or replace view v_mda_users as
        SELECT DISTINCT u.id,
                    u.username,
                    u.last_name,
                    u.first_name,
                    u.middle_name,
                    u.email,
                    e.dt_hired,
                    e.dt_fired,
                    e.dttm_deleted IS NULL AND e.dt_hired <= CURRENT_TIMESTAMP::date AND
                    (e.dt_fired IS NULL OR e.dt_fired >= CURRENT_TIMESTAMP::date) AS active,
                    CASE
                        WHEN s.level = 0 THEN 'COMPANY'::text
                        WHEN s.level = 1 THEN 'DIVISION'::text
                        WHEN s.level = 2 THEN 'REGION'::text
                        WHEN s.level = 3 THEN 'SHOP'::text
                        ELSE NULL::text
                        END                                                       AS level,
                    CASE
                        WHEN (
                                (e.dttm_deleted IS NULL AND e.dt_hired <= CURRENT_TIMESTAMP::date AND
                                 (e.dt_fired IS NULL OR e.dt_fired >= CURRENT_TIMESTAMP::date)) and e.id = (
                                select e2.id
                                from base_employment e2
                                         JOIN base_employee employee2 ON e2.employee_id = employee2.id
                                         JOIN base_user u2 ON employee2.user_id = u2.id
                                         JOIN base_shop s2 ON e2.shop_id = s2.id
                                         LEFT JOIN base_workerposition wp2 ON e2.position_id = wp2.id
                                         LEFT JOIN base_group fg2 ON e2.function_group_id = fg2.id
                                         LEFT JOIN base_group g2 ON wp2.group_id = g2.id
                                WHERE s2.id = s.id
                                  and (g2.code::text = 'director'::text OR fg2.code::text = 'director'::text)
                                  and (e2.dttm_deleted IS NULL AND e2.dt_hired <= CURRENT_TIMESTAMP::date AND
                                       (e2.dt_fired IS NULL OR e2.dt_fired >= CURRENT_TIMESTAMP::date))
                                ORDER BY EXISTS(
                                             SELECT wd2.id
                                             FROM timetable_workerday wd2
                                             WHERE wd2.employee_id = employee2.id
                                               AND wd2.dt = now()::date
                                               AND wd2.type in ('M', 'S', 'V')
                                               AND wd2.is_fact is False
                                               AND wd2.is_approved is True
                                         ),
                                         e2.is_visible DESC,
                                         e2.norm_work_hours DESC,
                                         EXISTS(
                                             SELECT ds.id
                                             FROM base_shop ds
                                             WHERE ds.director_id = employee2.user_id
                                         ) DESC,
                                         e2.dt_hired DESC
                                LIMIT 1
                            )
                            ) THEN 'DIR'::text
                        WHEN (
                                not (e.dttm_deleted IS NULL AND e.dt_hired <= CURRENT_TIMESTAMP::date AND
                                     (e.dt_fired IS NULL OR e.dt_fired >= CURRENT_TIMESTAMP::date)) and
                                (g.code::text = 'director'::text OR fg.code::text = 'director'::text)
                            ) THEN 'DIR'::text
                        ELSE 'MANAGER'::text
                        END                                                       AS role,
                    s.name                                                        AS shop_name,
                    s.code                                                        AS shop_code,
                    wp.name                                                       AS position_name,
                    wp.code                                                       AS position_code,
                    g.name                                                        AS position_group_name,
                    g.code                                                        AS position_group_code,
                    fg.name                                                       AS func_group_name,
                    fg.code                                                       AS func_group_code,
                    u.dttm_modified                                               AS user_last_modified,
                    e.dttm_modified                                               AS employment_last_modified,
                    wp.dttm_modified                                              AS position_last_modified,
                    GREATEST(u.dttm_modified, e.dttm_modified, wp.dttm_modified)  AS last_modified,
                    e.code
    FROM base_employment e
             JOIN base_employee employee ON e.employee_id = employee.id
             JOIN base_user u ON employee.user_id = u.id
             JOIN base_shop s ON e.shop_id = s.id
             LEFT JOIN base_workerposition wp ON e.position_id = wp.id
             LEFT JOIN base_group fg ON e.function_group_id = fg.id
             LEFT JOIN base_group g ON wp.group_id = g.id
             LEFT JOIN timetable_workerday wdpa
                       ON employee.id = wdpa.employee_id AND wdpa.dt = now()::date AND wdpa.is_fact = false AND
                          wdpa.is_approved = true
    WHERE True
      AND e.dttm_deleted IS NULL
      AND (s.dttm_deleted IS NULL OR s.dttm_deleted >= (CURRENT_TIMESTAMP - '60 days'::interval))
      AND (s.dt_closed IS NULL OR s.dt_closed >= (CURRENT_TIMESTAMP - '60 days'::interval))
      AND ((e.dt_fired > '2020-10-01'::date AND e.dt_hired < e.dt_fired) OR e.dt_fired is null)
      AND e.dt_hired <= CURRENT_TIMESTAMP::date
      AND (NOT g.code = 'director' OR wp.group_id IS NULL OR g.code = 'director' AND (wdpa.type IS NULL OR (wdpa.type::text <> ALL (ARRAY ['M'::text]))))
      AND s.level = 3
    ;
""")


class Migration(migrations.Migration):

    dependencies = [
        ('integration', '0004_vmdausers'),
    ]

    operations = [
        migrations.RunPython(upd_v_mda_users, migrations.RunPython.noop)
    ]
