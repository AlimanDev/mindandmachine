# Generated by Django 2.2.24 on 2021-10-19 20:01

from datetime import timedelta
from decimal import Decimal

from django.db import migrations

TIMESHEET_TYPE_FACT = 'F'
TIMESHEET_TYPE_MAIN = 'M'
TIMESHEET_TYPE_ADDITIONAL = 'A'

HOURS_TYPE_DAY = 'D'
HOURS_TYPE_NIGHT = 'N'

SOURCE_TYPE_PLAN = 'P'
SOURCE_TYPE_FACT = 'F'
SOURCE_TYPE_MANUAL = 'M'
SOURCE_TYPE_SYSTEM = 'S'

SOURCE_MAPPING = {
    'plan': SOURCE_TYPE_PLAN,
    'fact': SOURCE_TYPE_FACT,
    'manual': SOURCE_TYPE_MANUAL,
    'system': SOURCE_TYPE_SYSTEM,
}


def move_old_timesheet_data_to_new_timesheet(apps, schema_editor):
    Timesheet = apps.get_model('timetable', 'Timesheet')
    TimesheetItem = apps.get_model('timetable', 'TimesheetItem')
    fact_timesheet_items = []
    main_timesheet_items = []
    additional_timesheet_items = []
    TimesheetItem.objects.all().delete()
    for timesheet in Timesheet.objects.select_related('main_timesheet_type', 'fact_timesheet_type'):
        if timesheet.fact_timesheet_type is not None:
            if timesheet.fact_timesheet_type.is_dayoff:
                fact_timesheet_items.append(
                    TimesheetItem(
                        timesheet_type=TIMESHEET_TYPE_FACT,
                        employee_id=timesheet.employee_id,
                        dt=timesheet.dt,
                        day_type=timesheet.fact_timesheet_type,
                        source=SOURCE_MAPPING.get(timesheet.fact_timesheet_source, ''),
                    )
                )
            else:
                fact_timesheet_items.append(
                    TimesheetItem(
                        timesheet_type=TIMESHEET_TYPE_FACT,
                        employee_id=timesheet.employee_id,
                        dt=timesheet.dt,
                        day_type=timesheet.fact_timesheet_type,
                        dttm_work_start=timesheet.fact_timesheet_dttm_work_start,
                        dttm_work_end=timesheet.fact_timesheet_dttm_work_end,
                        day_hours=timesheet.fact_timesheet_day_hours or Decimal('0.00'),
                        night_hours=timesheet.fact_timesheet_night_hours or Decimal('0.00'),
                        shop_id=timesheet.shop_id,
                        source=SOURCE_MAPPING.get(timesheet.fact_timesheet_source, ''),
                    )
                )

        if timesheet.main_timesheet_type is not None:
            if timesheet.main_timesheet_type.is_dayoff:
                main_timesheet_items.append(
                    TimesheetItem(
                        timesheet_type=TIMESHEET_TYPE_MAIN,
                        employee_id=timesheet.employee_id,
                        dt=timesheet.dt,
                        day_type=timesheet.main_timesheet_type,
                    )
                )
            else:
                main_timesheet_items.append(
                    TimesheetItem(
                        timesheet_type=TIMESHEET_TYPE_MAIN,
                        employee_id=timesheet.employee_id,
                        dt=timesheet.dt,
                        dttm_work_start=timesheet.fact_timesheet_dttm_work_start,
                        dttm_work_end=(timesheet.fact_timesheet_dttm_work_start - timedelta(
                            hours=float(timesheet.main_timesheet_day_hours or 0) + float(
                                timesheet.main_timesheet_night_hours or 0))) if timesheet.fact_timesheet_dttm_work_start else None,
                        day_type=timesheet.main_timesheet_type,
                        day_hours=timesheet.main_timesheet_day_hours or Decimal('0.00'),
                        night_hours=timesheet.main_timesheet_night_hours or Decimal('0.00'),
                        shop_id=timesheet.shop_id,
                    )
                )

        if timesheet.additional_timesheet_hours:
            additional_timesheet_items.append(
                TimesheetItem(
                    timesheet_type=TIMESHEET_TYPE_ADDITIONAL,
                    employee_id=timesheet.employee_id,
                    dt=timesheet.dt,
                    dttm_work_start=(timesheet.fact_timesheet_dttm_work_end - timedelta(
                        hours=float(timesheet.additional_timesheet_hours or 0))) if timesheet.fact_timesheet_dttm_work_end else None,
                    dttm_work_end=timesheet.fact_timesheet_dttm_work_end,
                    day_type_id='W',
                    day_hours=timesheet.additional_timesheet_hours,
                    shop_id=timesheet.shop_id,
                )
            )

    if fact_timesheet_items:
        TimesheetItem.objects.bulk_create(fact_timesheet_items, batch_size=1000)
    if main_timesheet_items:
        TimesheetItem.objects.bulk_create(main_timesheet_items, batch_size=1000)
    if additional_timesheet_items:
        TimesheetItem.objects.bulk_create(additional_timesheet_items, batch_size=1000)


class Migration(migrations.Migration):
    dependencies = [
        ('timetable', '0092_auto_20211019_2001'),
    ]

    operations = [
        migrations.RunPython(move_old_timesheet_data_to_new_timesheet, migrations.RunPython.noop),
    ]
