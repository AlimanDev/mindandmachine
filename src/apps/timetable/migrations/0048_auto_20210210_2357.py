# Generated by Django 2.2.16 on 2021-02-10 23:57

from django.db import migrations

def add_prod_cal(apps, schema_editor):
    schema_editor.execute(
        """
        create or replace view prod_cal as
        SELECT pd.id,
               pd.dt,
               e.user_id,
               e.id as employment_id,
               u.username,
               e.shop_id,
               s.code,
               pd.region_id,
               sum(
                   CASE
                       WHEN pd.type::text = 'W'::text THEN 8::double precision ::double precision * COALESCE(wp.hours_in_a_week::integer, 40)::double precision /
                   40::double precision * e.norm_work_hours::double precision /
                   100::double precision
                       WHEN pd.type::text = 'S'::text THEN 8::double precision ::double precision * COALESCE(wp.hours_in_a_week::integer, 40)::double precision /
                   40::double precision * e.norm_work_hours::double precision /
                   100::double precision - 1::double precision
                       ELSE 0::double precision
                       END
               ) AS norm_hours
        FROM base_productionday pd
                 JOIN base_employment e
                      ON (pd.dt >= e.dt_hired or e.dt_hired is NULL) AND (pd.dt <= e.dt_fired or e.dt_fired is NULL)
                 JOIN base_user u ON e.user_id = u.id
                 JOIN base_shop s ON e.shop_id = s.id and pd.region_id = s.region_id
                 LEFT JOIN base_workerposition wp ON e.position_id = wp.id
          and pd.dt >= '2020-01-01'
        GROUP BY pd.id, pd.dt, e.user_id, e.id, u.username, e.shop_id, s.code, pd.region_id;
        """
    )


def drop_prod_cal(apps, schema_editor):
    schema_editor.execute("drop view if exists prod_cal;")


class Migration(migrations.Migration):

    dependencies = [
        ('timetable', '0047_auto_20210121_1127'),
    ]

    operations = [
        migrations.RunPython(add_prod_cal, drop_prod_cal)
    ]
