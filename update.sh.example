#!/bin/bash

set -e

PROJECT_NAME=
PROJECT_PATH=/var/servers/${PROJECT_NAME}/backend/qos
USER=${PROJECT_NAME}
GIT_BRANCH=
VENV_PATH=${PROJECT_PATH}/../env

sudo su - ${USER} -c "cd ${PROJECT_PATH} && git fetch origin ${GIT_BRANCH}"

UPSTREAM=${1:-'@{u}'}
LOCAL=$(cd ${PROJECT_PATH} && git rev-parse @)
REMOTE=$(cd ${PROJECT_PATH} && git rev-parse "$UPSTREAM")
BASE=$(cd ${PROJECT_PATH} && git merge-base @ "$UPSTREAM")

if [ $LOCAL = $REMOTE ]; then
    echo "no changes, skip updating"
elif [ $LOCAL = $BASE ]; then
    echo 'start updating'

    sudo su - ${USER} -c "cd ${PROJECT_PATH} && git reset origin/${GIT_BRANCH}"

    sudo su - ${USER} -c "cd ${PROJECT_PATH} && ${VENV_PATH}/bin/pip install -r requirements.txt"
    sudo su - ${USER} -c "cd ${PROJECT_PATH} && ${VENV_PATH}/bin/python manage.py migrate"

    supervisorctl restart ${PROJECT_NAME}_uwsgi
    supervisorctl restart ${PROJECT_NAME}_celery
    supervisorctl restart ${PROJECT_NAME}_celerybeat

    echo 'finish updating'
elif [ $REMOTE = $BASE ]; then
    echo "need to push"
else
    echo "diverged"
fi
